message Vec3_Proto {
    required float  x                   = 1;
    required float  y                   = 2;
    required float  z                   = 3;
}

message Skill_Proto {
    required string    name             = 1;
    required uint32    exp              = 2;
}

message Stats_Proto {
    required uint32 str             = 1;
    required uint32 dex             = 2;
    required uint32 agi             = 3;
    required uint32 def             = 4;
    required uint32 matk            = 5;
    required uint32 mdef            = 6;
    required uint32 max_hp          = 7 [default = 10];
    required float  exp                = 8;
    required uint32 sp                 = 9;
    required float  walk_speed        = 10 [default = 1.0];
    required float  cool_down         = 11 [default = 1.0];

    repeated Skill_Proto skills        = 12;
}

message Buff_Proto {
    required string    effect            = 1;
    required float    start_time        = 2;
}

message Mob_Proto {
    required Vec3_Proto velocity    = 1;
    required float last_jump_time   = 2;
    required bool is_on_ground      = 3;
    required bool is_noclip         = 4;
    required bool is_sneaking       = 5;
    repeated string learnt_spells   = 6;
}

message Monster_Proto {
    required float next_move_time   = 1;
    optional Vec3_Proto move_target = 2;
    optional uint32 attack_target   = 3;
    optional float next_attack_time       = 4;
}

message PlayerMessage_Proto {
    required string text                = 1;
    required string font                = 2;
    required float  time                = 3;
}

message PlayerLastHurt_Proto {
    required string type                = 1;
    required float  time                = 2;
}

message Player_Proto {
    repeated PlayerMessage_Proto messages = 1;
    required float message_y            = 2;
    required float message_vy           = 3;

    required float  pain                = 4;

    repeated PlayerLastHurt_Proto last_hurts = 5;
    required Vec3_Proto angles          = 6;

    repeated string elements            = 7;
}

message Item_Proto {
    required string type                = 1;
    optional string effect              = 2;

    required float  cooldown_frac       = 3;
    required float  durability          = 4;
    required float  next_use_time       = 5;

    required sint32 beatitude           = 6;
    required sint32 modifier            = 7;

    required uint32 amount              = 8 [default = 1];

    required bool is_charging = 9;
    required float charge_time = 10;
    required bool is_item_identified = 11;

    required uint32 unlock_id = 12;

    required bool is_equipped = 13;

    required bool is_init_done = 14;
}

message Inventory_Proto {
    required uint32 slot                = 1;
    required Item_Proto item            = 2;
}

message Entity_Proto {
    required uint32 spawn_class         = 1;
    required string type                = 2;
    required uint32 id                  = 3;
    optional uint32 owner_id            = 4;

    required float  next_think_time    = 6;
    required float     start_time      = 7;
    required Vec3_Proto position = 8;
    required Vec3_Proto spawn_position = 9;
    required Vec3_Proto forward     = 10;
    required float      die_time        = 11;
    required bool       is_dead        = 14;

    required Stats_Proto base_stats    = 12;
    repeated Buff_Proto active_buffs = 13;

    required float      health          = 15;
    required float      render_angle    = 16;
    optional uint32     locked_id       = 17;

    repeated Inventory_Proto inventory  = 18;

    optional Mob_Proto mob              = 19;
    optional Monster_Proto monster      = 20;
    optional Player_Proto player        = 21;
    optional Item_Proto item            = 22;

    required uint32 trigger_id          = 23;
    required bool   is_toggle           = 24;
    required bool   is_triggered        = 25;
}

message EntityList_Proto {
    repeated Entity_Proto entities      = 1;
}
